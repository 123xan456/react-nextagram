{"version":3,"sources":["containers/UserImages.js","pages/HomePage.js","components/navbar.js","containers/LoginModal.js","pages/UserProfilePage.js","pages/Myprofilepage.js","App.js","serviceWorker.js","index.js"],"names":["UserImages","state","userimages","componentDidMount","axios","get","concat","_this","props","user_id","then","result","data","setState","react_default","a","createElement","this","map","userimage","index","lib_default","key","src","width","height","React","Component","HomePage","success","loading","users","userImages","catch","error","console","log","alt","user","className","username","profileImage","UserImages_UserImages","id","Navbar","Link","to","LoginModal","email","password","loggedin","logOut","sessionStorage","removeItem","alert","window","location","href","getJwt","e","preventDefault","post","response","message","auth_token","setItem","handleEmail","event","value","target","handlePassword","handleSubmit","jwt","onClick","name","method","onSubmit","htmlFor","type","aria-describedby","placeholder","required","onChange","UserProfilePage","match","params","MyProfilePage","authtoken","url","headers","Authorization","err","App","profilelinks","Route","path","component","exact","Boolean","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56df041e.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\nimport Image from \"react-graceful-image\"\r\n\r\nexport default class UserImages extends React.Component {\r\n\tstate = {\r\n\t\tuserimages:[]\r\n\t}\r\n\tcomponentDidMount = () =>{\r\n\t\taxios.get(`https://insta-oct18.nextacademy.com/api/v1/images?userId=${this.props.user_id}`)\r\n\t\t.then(result =>{\r\n\t\t\t// console.log(result)\r\n\t\t\tconst {data} = result\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tuserimages:data\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\trender(){\r\n\treturn(\r\n\t\t<div>\r\n\t\t \r\n\t\t\t{\r\n\t\t\t\tthis.state.userimages.map((userimage,index) =>\r\n\t\t\t\t<Image \r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tsrc={userimage}\r\n\t\t\t\t\twidth=\"50px\"\r\n\t\t\t\t\theight=\"50px\"\r\n\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t  \r\n\t\t</div>\r\n\t)\r\n\t}\r\n  }","import React from 'react'\r\nimport axios from 'axios'\r\nimport UserImages from '../containers/UserImages'\r\n\r\nexport default class HomePage extends React.Component {\r\n\r\n\t\tstate = {\r\n\t\t\tsuccess:true,\r\n\t\t\tloading:true,\r\n\t\t\tusers: [],\r\n\t\t\tuserImages:[]\r\n\t\t}    \r\n\r\n\t\tcomponentDidMount = () =>{\r\n\t\t\t\taxios.get('https://insta-oct18.nextacademy.com/api/v1/users')\r\n\t\t\t\t.then(result =>{\r\n\t\t\t\tif(this.state.success===true){\r\n\t\t\t\t\t\tconst {data} = result\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\t\tusers: data\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\t.catch(error =>{\r\n\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t})\r\n\t\t}\r\n\t\r\n\t\trender(){\r\n\t\t\treturn (  \r\n\t\t\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\tthis.state.loading ? <div>\r\n\t\t\t\t<img src='https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif' alt = 'loading the loading screen'></img>\r\n\t\t\t\t</div> : ''\r\n\t\t\t\t}\r\n\t\t\t\t{/* <LoadingIndicator /> */}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t<h1>Home Page</h1>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.users.map((user,index) =>\r\n\t\t\t\t\t\t\t\t<div className='usernames' key={index}>\r\n\t\t\t\t\t\t\t\t\t<h2>Username:{user.username}</h2>\r\n\t\t\t\t\t\t\t\t\t<h3>Profile Picture:</h3>\r\n\t\t\t\t\t\t\t\t\t<figure>           \r\n\t\t\t\t\t\t\t\t\t\t<img src={user.profileImage} alt =\"user dp\"></img>\r\n\t\t\t\t\t\t\t\t\t</figure>\r\n\t\t\t\t\t\t\t\t\t<h3>Posts:</h3>\r\n\t\t\t\t\t\t\t\t\t<UserImages user_id ={user.id} />\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n","import React from 'react'\r\nimport {Link } from \"react-router-dom\"\r\nimport axios from 'axios'\r\n\r\nclass Navbar extends React.Component{\r\n    state = {\r\n        success:true,\r\n        loading:true,\r\n        users: []\r\n    }    \r\n\r\n    componentDidMount = () =>{\r\n        axios.get('https://insta-oct18.nextacademy.com/api/v1/users')\r\n        .then(result =>{\r\n            if(this.state.success===true){\r\n                const {data} = result\r\n                this.setState({\r\n                    loading:false,\r\n                    users: data\r\n                })\r\n            }\r\n            })\r\n\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n \r\n    render(){\r\n        return(\r\n            <div>\r\n                    <nav >\r\n                        {\r\n\r\n                            this.state.users.map((user,index) =>\r\n                            <button key={index}>\r\n                                <Link to={`/user/${user.id}`}>{user.username}'s Profile</Link>\r\n                            </button>\r\n                            )\r\n                        }\r\n                    </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default class LoginModal extends React.Component{\r\n    state={\r\n            email:'',\r\n            password:'',\r\n            loggedin:false,\r\n            loading:false,\r\n    }\r\n\r\n    logOut = () =>{\r\n        sessionStorage.removeItem('authtoken')\r\n        this.setState({loggedin:false})\r\n        alert('Succesfully logged out!')\r\n        window.location.href = ('/')\r\n      }\r\n\r\n    getJwt = (e) =>{\r\n        e.preventDefault()\r\n        axios.post('https://insta-oct18.nextacademy.com/api/v1/login',{\r\n            email:this.state.email,\r\n            password:this.state.password\r\n        })\r\n        .then(function (response) {\r\n            const {data} = response;\r\n            const {message, auth_token} = data\r\n            // console.log(response)\r\n            alert(message)\r\n            window.location = ('/')\r\n            sessionStorage.setItem(\"authtoken\",auth_token)\r\n            \r\n        })\r\n          .catch(function (error) {\r\n            alert('Failed sign in, please try again');\r\n        });\r\n        this.setState({loggedin:true,loading:true})\r\n        \r\n    }\r\n\r\n    handleEmail = (event) =>{\r\n        const target = event.target\r\n        const value = target.value\r\n        \r\n        \r\n        this.setState({\r\n            email : value\r\n        })\r\n        sessionStorage.setItem('email',value)\r\n    }\r\n\r\n    handlePassword = (event) =>{\r\n        const target = event.target\r\n        const value = target.value\r\n        \r\n        \r\n        this.setState({\r\n            password : value\r\n        })\r\n        \r\n        sessionStorage.setItem('password',value)\r\n\r\n        \r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        // console.log(this.state.email)\r\n        // console.log(this.state.password)\r\n        // console.log(this.state.loggedin)\r\n        const jwt = sessionStorage.auth_token\r\n        return(\r\n            <div>\r\n            { jwt !== '' ? <button onClick={this.logOut }>Logout</button> : ''}\r\n            {/* <button onClick={this.logOut }>Logout</button> */}\r\n            <form name='form' id='loginmodal' method='post' onSubmit={this.handleSubmit && this.getJwt}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                    <input name='email' type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" required onChange={this.handleEmail} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                    <input name='password' type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" required  onChange={this.handlePassword}/>\r\n                </div>\r\n                <div className=\"form-check\">\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\" /*disabled=\"!form.valid\"*/>{this.state.loading === true? 'Loading' : 'Submit' }</button>\r\n                \r\n            </form>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}","import React from \"react\"\r\nimport axios from 'axios'\r\nimport Image from \"react-graceful-image\"\r\n\r\nclass UserProfilePage extends React.Component {\r\n     state = {\r\n\t\tuserimages:[]\r\n\t}\r\n\t\r\n\tcomponentDidMount = () =>{\r\n\t\tconst {id} = this.props.match.params\r\n\t\t\r\n\t\taxios.get(`https://insta-oct18.nextacademy.com/api/v1/images?userId=${id}`)\r\n\t\t.then(result =>{\r\n\t\t\tconsole.log(result)\r\n\t\t\tconst {data} = result\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tuserimages:data\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\t.catch(error =>{\r\n\t\t\tconsole.log(error)\r\n\t\t})\r\n\t}\r\n\t\r\n\r\n  render() {\r\n    return (\r\n        <div> \r\n\r\n            <h1>User profile page</h1>\r\n            {\r\n                \r\n                this.state.userimages.map((userimage,index) =>\r\n                <Image \r\n\t\t\t\t\tclassName='posts'\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tsrc={userimage}\r\n\t\t\t\t\twidth=\"50px\"\r\n\t\t\t\t\theight=\"50px\"\r\n\t\t\t\t/>\r\n\t\t\t\t)\r\n            }\r\n            \r\n            \r\n        </div>\r\n           \r\n    )\r\n  }\r\n}\r\n\r\nexport default UserProfilePage","import React from 'react'\r\nimport axios from 'axios'\r\nimport Image from 'react-graceful-image'\r\n\r\nexport default class MyProfilePage extends React.Component{\r\n    state={\r\n        userimages:[],\r\n        jwt:sessionStorage.authtoken\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        axios({\r\n            url:'https://insta-oct18.nextacademy.com/api/v1/images/me',\r\n            method:'get',\r\n            headers:{Authorization: `Bearer ${this.state.jwt}`}\r\n\r\n        })\r\n        \r\n        .then(result =>{\r\n            const {data} = result\r\n            this.setState({userimages:data})\r\n        })\r\n        .catch(err =>{\r\n            console.log(err)\r\n            alert('Unable to load pictures')\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Hello and Welcome to your Profile</h1>\r\n\r\n                {\r\n                    this.state.userimages.map((user,index) =>\r\n                    <Image\r\n                    key={index}\r\n                    src={user}\r\n                    className='imgimg'\r\n                    />\r\n\r\n                    )\r\n\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\nimport './App.css'\nimport HomePage from './pages/HomePage'\nimport Navbar from './components/navbar'\nimport { Route, Link } from \"react-router-dom\"\nimport LoginModal from './containers/LoginModal'\nimport UserProfilePage from './pages/UserProfilePage';\nimport MyProfilePage from './pages/Myprofilepage';\n\nclass App extends React.Component {\n  state = {\n    profilelinks:[],\n    loggedin:false,\n  }\n\n  \n\n  render(){\n    return(\n      <div>\n      <br/>\n      <br/>\n        <nav>\n        \n        \n            {\n              sessionStorage.authtoken !== '' \n              ? <Link className='main-link' id='link4' to=\"/myprofile\">My Profile Page</Link>\n              : ''\n            }\n\n            <Link  className='main-link' id='link1' to=\"/navbar\">See other users</Link>\n            <Route path=\"/navbar\" component={Navbar}></Route>\n      \n            <Link  className='main-link' id='link2' to=\"/login\">Login or Logout Here</Link>\n            <Route path=\"/login\" component={LoginModal}></Route>\n        \n            <Link className='main-link' id='link3' to=\"/\">Home</Link>\n            <Route exact path=\"/\" component={HomePage}></Route>\n\n            <Route path=\"/myprofile\" component={MyProfilePage}></Route>\n            \n            \n\n            \n\n            <Route path=\"/user/:id\" component={UserProfilePage}/>\n        </nav>\n        \n        <br/>\n        \n        <br/>\n      \n      </div>  \n  )\n}\n}\n\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}